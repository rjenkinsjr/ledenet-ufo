version: 2

jobs:
    build:
        environment:
            TZ: "/usr/share/zoneinfo/America/Detroit"
        working_directory: ~/lufo
        docker:
            - image: circleci/buildpack-deps:xenial-browsers
        steps:
            - add_ssh_keys
            - checkout
            - restore_cache:
                key: nvm-cache-{{ .Environment.NVM_CACHE_VERSION }}-{{ arch }}-{{ checksum ".lufoDependencies" }}
            - restore_cache:
                key: api-yarn-cache-{{ .Environment.YARN_CACHE_VERSION }}-{{ arch }}-{{ checksum "lufo-api/package.json" }}
            - restore_cache:
                key: cli-yarn-cache-{{ .Environment.YARN_CACHE_VERSION }}-{{ arch }}-{{ checksum "lufo-cli/package.json" }}
            - run:
                name: Install nvm/NodeJS/Yarn
                command: |
                  # Install nvm.
                  echo 'Installing nvm...'
                  cd ~
                  [ ! -d ".nvm" ] && git clone https://github.com/creationix/nvm.git .nvm
                  cd .nvm
                  git checkout $LUFO_NVM_VERSION
                  . nvm.sh
                  # Install NodeJS.
                  echo 'Installing NodeJS versions necessary for testing...'
                  eval . "$CIRCLE_WORKING_DIRECTORY/.lufoDependencies"
                  for v in "${LUFO_NODE_VERSIONS[@]}"; do nvm install $v; echo '---'; done
                  nvm alias default $LUFO_DEFAULT_NODE_VERSION
                  # Make nvm available in future shells.
                  echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
                  echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
                  # Install Yarn.
                  [ ! -d ".yarn" ] && curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $LUFO_YARN_VERSION
                  # Make yarn available in future shells.
                  echo 'export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"' >> $BASH_ENV
            - run:
                name: API
                command: |
                  cd lufo-api
                  rm -rf node_modules
                  yarn
                  . ../.lufoDependencies
                  for v in "${LUFO_NODE_VERSIONS[@]}"; do
                    echo -n -e '\n\n\n\n\n'
                    echo "=== $v ==="
                    nvm use $v
                    scripts/test.sh
                  done
            - run:
                name: CLI
                command: |
                  cd lufo-cli
                  rm -rf node_modules
                  yarn
                  . ../.lufoDependencies
                  for v in "${LUFO_NODE_VERSIONS[@]}"; do
                    echo -n -e '\n\n\n\n\n'
                    echo "=== $v ==="
                    nvm use $v
                    scripts/test.sh
                  done
                  ./node_modules/.bin/linklocal unlink # Prevent CircleCI caching.
            - run:
                name: Deploy
                command: |
                  scripts/deploy.sh
            - save_cache:
                key: nvm-cache-{{ .Environment.NVM_CACHE_VERSION }}-{{ arch }}-{{ checksum ".lufoDependencies" }}
                paths:
                    - /home/circleci/.nvm
                    - /home/circleci/.yarn
            - save_cache:
                key: api-yarn-cache-{{ .Environment.YARN_CACHE_VERSION }}-{{ arch }}-{{ checksum "lufo-api/package.json" }}
                paths:
                    - /home/circleci/lufo/lufo-api/node_modules
            - save_cache:
                key: cli-yarn-cache-{{ .Environment.YARN_CACHE_VERSION }}-{{ arch }}-{{ checksum "lufo-cli/package.json" }}
                paths:
                    - /home/circleci/lufo/lufo-cli/node_modules
